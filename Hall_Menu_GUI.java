/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Scheduler;

import com.toedter.calendar.JDateChooser;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.time.LocalTime;
import java.time.ZoneId;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import Main.*;

/**
 *
 * @author Ahmed
 */
public class Hall_Menu_GUI extends javax.swing.JFrame {
    
    /**
     * Creates new form Hall_Menu_GUI
     */
    public Hall_Menu_GUI() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Card_Layout = new javax.swing.JPanel();
        Main_Menu = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        Maintenance_date_time = new javax.swing.JButton();
        Set_data_time_Button = new javax.swing.JButton();
        Delete_Hall_Button = new javax.swing.JButton();
        EXITButton = new javax.swing.JButton();
        Update_Hall_Button = new javax.swing.JButton();
        Search_Filter_Hall_Button = new javax.swing.JButton();
        View_Hall_Button = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        Add_Hall_Button = new javax.swing.JButton();
        jLabel27 = new javax.swing.JLabel();
        jLabel37 = new javax.swing.JLabel();
        View_Hall = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jHall_Info = new javax.swing.JTable();
        jLabel10 = new javax.swing.JLabel();
        jButton5 = new javax.swing.JButton();
        jView_Availability_Button = new javax.swing.JButton();
        jView_Maintenance_Button = new javax.swing.JButton();
        jLabel28 = new javax.swing.JLabel();
        Add_Hall = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        ID_Field = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        LocationField = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        TypeField = new javax.swing.JComboBox<>();
        Add_Clear = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jLabel29 = new javax.swing.JLabel();
        Search_Hall = new javax.swing.JPanel();
        jLabel14 = new javax.swing.JLabel();
        jButton6 = new javax.swing.JButton();
        Search_Field = new javax.swing.JTextField();
        Search_Button = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jHall_search = new javax.swing.JTable();
        jLabel30 = new javax.swing.JLabel();
        Update_Hall = new javax.swing.JPanel();
        jLabel16 = new javax.swing.JLabel();
        jButton9 = new javax.swing.JButton();
        Update_Box = new javax.swing.JComboBox<>();
        Update_Field = new javax.swing.JTextField();
        jScrollPane3 = new javax.swing.JScrollPane();
        Update_Table = new javax.swing.JTable();
        jLabel17 = new javax.swing.JLabel();
        Update_ID = new javax.swing.JTextField();
        Location_Update = new javax.swing.JTextField();
        Update_Button = new javax.swing.JButton();
        Update_Clear = new javax.swing.JButton();
        Update_Type = new javax.swing.JComboBox<>();
        Update_Search = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        jLabel31 = new javax.swing.JLabel();
        Delete_Hall = new javax.swing.JPanel();
        Delete_Button = new javax.swing.JButton();
        Delete_Clear = new javax.swing.JButton();
        Delete_Search = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        Delete_Field = new javax.swing.JTextField();
        jScrollPane4 = new javax.swing.JScrollPane();
        Delete_Table = new javax.swing.JTable();
        jLabel19 = new javax.swing.JLabel();
        jButton16 = new javax.swing.JButton();
        jLabel32 = new javax.swing.JLabel();
        Set_Date_Time = new javax.swing.JPanel();
        jLabel20 = new javax.swing.JLabel();
        jButton18 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        Availbility_Clear = new javax.swing.JButton();
        Availability_Button = new javax.swing.JButton();
        End_Availability = new com.toedter.calendar.JDateChooser();
        Start_Availability = new com.toedter.calendar.JDateChooser();
        jLabel33 = new javax.swing.JLabel();
        Set_Maintenance = new javax.swing.JPanel();
        jLabel21 = new javax.swing.JLabel();
        jButton19 = new javax.swing.JButton();
        jLabel15 = new javax.swing.JLabel();
        Availbility_Clear1 = new javax.swing.JButton();
        Maintenance_Button = new javax.swing.JButton();
        Start_Maintenance_Date = new com.toedter.calendar.JDateChooser();
        End_Maintenance_Date = new com.toedter.calendar.JDateChooser();
        jLabel18 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        End_Maintenance_Time = new javax.swing.JComboBox<>();
        Start_Maintenance_Time = new javax.swing.JComboBox<>();
        jLabel13 = new javax.swing.JLabel();
        Maintenance_Search = new javax.swing.JButton();
        Maintenance_Field = new javax.swing.JTextField();
        jScrollPane6 = new javax.swing.JScrollPane();
        Maintenance_Table = new javax.swing.JTable();
        jLabel24 = new javax.swing.JLabel();
        Remarks_Maintenance = new javax.swing.JTextField();
        jLabel34 = new javax.swing.JLabel();
        View_Availability = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        jScrollPane5 = new javax.swing.JScrollPane();
        jHall_Availability = new javax.swing.JTable();
        jLabel35 = new javax.swing.JLabel();
        View_Maintenance = new javax.swing.JPanel();
        jLabel25 = new javax.swing.JLabel();
        jButton7 = new javax.swing.JButton();
        jScrollPane7 = new javax.swing.JScrollPane();
        Hall_Maintenance = new javax.swing.JTable();
        jLabel36 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        Card_Layout.setLayout(new java.awt.CardLayout());

        Main_Menu.setBackground(new java.awt.Color(255, 255, 255));
        Main_Menu.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Century Gothic", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Hall Symphony Inc.");
        Main_Menu.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 40, 390, 70));

        jLabel2.setBackground(new java.awt.Color(0, 0, 0));
        jLabel2.setFont(new java.awt.Font("Century Gothic", 1, 48)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Scheduler Menu");
        Main_Menu.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 250, 440, 100));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 352, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 10, Short.MAX_VALUE)
        );

        Main_Menu.add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 400, -1, 10));

        Maintenance_date_time.setBackground(new java.awt.Color(51, 0, 51));
        Maintenance_date_time.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        Maintenance_date_time.setForeground(new java.awt.Color(255, 255, 255));
        Maintenance_date_time.setText("Set Hall Maintenance");
        Maintenance_date_time.setBorder(null);
        Maintenance_date_time.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Maintenance_date_timeActionPerformed(evt);
            }
        });
        Main_Menu.add(Maintenance_date_time, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 440, 240, 50));

        Set_data_time_Button.setBackground(new java.awt.Color(51, 0, 51));
        Set_data_time_Button.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        Set_data_time_Button.setForeground(new java.awt.Color(255, 255, 255));
        Set_data_time_Button.setText("Set Start Date &Time");
        Set_data_time_Button.setBorder(null);
        Set_data_time_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Set_data_time_ButtonActionPerformed(evt);
            }
        });
        Main_Menu.add(Set_data_time_Button, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 370, 240, 50));

        Delete_Hall_Button.setBackground(new java.awt.Color(51, 0, 51));
        Delete_Hall_Button.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        Delete_Hall_Button.setForeground(new java.awt.Color(255, 255, 255));
        Delete_Hall_Button.setText("Delete Hall Record");
        Delete_Hall_Button.setBorder(null);
        Delete_Hall_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Delete_Hall_ButtonActionPerformed(evt);
            }
        });
        Main_Menu.add(Delete_Hall_Button, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 300, 240, 50));

        EXITButton.setBackground(new java.awt.Color(51, 0, 51));
        EXITButton.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        EXITButton.setForeground(new java.awt.Color(255, 255, 255));
        EXITButton.setText("EXIT");
        EXITButton.setBorder(null);
        EXITButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EXITButtonActionPerformed(evt);
            }
        });
        Main_Menu.add(EXITButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(840, 540, 150, 50));

        Update_Hall_Button.setBackground(new java.awt.Color(51, 0, 51));
        Update_Hall_Button.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        Update_Hall_Button.setForeground(new java.awt.Color(255, 255, 255));
        Update_Hall_Button.setText("Update Hall Info");
        Update_Hall_Button.setBorder(null);
        Update_Hall_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Update_Hall_ButtonActionPerformed(evt);
            }
        });
        Main_Menu.add(Update_Hall_Button, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 230, 240, 50));

        Search_Filter_Hall_Button.setBackground(new java.awt.Color(51, 0, 51));
        Search_Filter_Hall_Button.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        Search_Filter_Hall_Button.setForeground(new java.awt.Color(255, 255, 255));
        Search_Filter_Hall_Button.setText("Search &Filter Hall");
        Search_Filter_Hall_Button.setBorder(null);
        Search_Filter_Hall_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Search_Filter_Hall_ButtonActionPerformed(evt);
            }
        });
        Main_Menu.add(Search_Filter_Hall_Button, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 160, 240, 50));

        View_Hall_Button.setBackground(new java.awt.Color(51, 0, 51));
        View_Hall_Button.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        View_Hall_Button.setForeground(new java.awt.Color(255, 255, 255));
        View_Hall_Button.setText("View Current Halls");
        View_Hall_Button.setBorder(null);
        View_Hall_Button.setFocusCycleRoot(true);
        View_Hall_Button.setFocusTraversalPolicyProvider(true);
        View_Hall_Button.setHideActionText(true);
        View_Hall_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                View_Hall_ButtonActionPerformed(evt);
            }
        });
        Main_Menu.add(View_Hall_Button, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 30, 240, 50));

        jButton1.setBackground(new java.awt.Color(51, 0, 51));
        jButton1.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("Log out");
        jButton1.setBorder(null);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        Main_Menu.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 520, 240, 50));

        jPanel2.setBackground(new java.awt.Color(51, 0, 51));

        Add_Hall_Button.setBackground(new java.awt.Color(51, 0, 51));
        Add_Hall_Button.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        Add_Hall_Button.setForeground(new java.awt.Color(255, 255, 255));
        Add_Hall_Button.setText("Add New Hall");
        Add_Hall_Button.setAutoscrolls(true);
        Add_Hall_Button.setBorder(null);
        Add_Hall_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Add_Hall_ButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Add_Hall_Button, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(84, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(96, 96, 96)
                .addComponent(Add_Hall_Button, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(454, Short.MAX_VALUE))
        );

        Main_Menu.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 330, 600));

        jLabel27.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/pexels-photo-6985132.jpg"))); // NOI18N
        Main_Menu.add(jLabel27, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1000, 600));

        jLabel37.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/pexels-photo-6985132.jpg"))); // NOI18N
        Main_Menu.add(jLabel37, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1000, 600));

        Card_Layout.add(Main_Menu, "card2");

        View_Hall.setBackground(new java.awt.Color(255, 255, 255));
        View_Hall.setPreferredSize(new java.awt.Dimension(1000, 600));
        View_Hall.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jScrollPane1.setBackground(new java.awt.Color(255, 255, 255));
        jScrollPane1.setBorder(null);
        jScrollPane1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane1.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);

        jHall_Info.setBackground(new java.awt.Color(51, 0, 51));
        jHall_Info.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        jHall_Info.setForeground(new java.awt.Color(255, 255, 255));
        jHall_Info.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"", "", "", "", ""},
                {null, null, null, null, ""},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Hall ID", "Hall Type", "Hall Location", "Hall Capacity", "Hall Cost"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jHall_Info.setSelectionBackground(new java.awt.Color(51, 0, 51));
        jHall_Info.setSelectionForeground(new java.awt.Color(51, 0, 51));
        jHall_Info.setShowGrid(false);
        jHall_Info.getTableHeader().setResizingAllowed(false);
        jHall_Info.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(jHall_Info);
        if (jHall_Info.getColumnModel().getColumnCount() > 0) {
            jHall_Info.getColumnModel().getColumn(0).setResizable(false);
            jHall_Info.getColumnModel().getColumn(0).setPreferredWidth(10);
            jHall_Info.getColumnModel().getColumn(1).setResizable(false);
            jHall_Info.getColumnModel().getColumn(2).setResizable(false);
            jHall_Info.getColumnModel().getColumn(3).setResizable(false);
            jHall_Info.getColumnModel().getColumn(4).setResizable(false);
        }

        View_Hall.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(22, 82, 965, 352));

        jLabel10.setFont(new java.awt.Font("Century Gothic", 1, 24)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText("View Current Halls");
        View_Hall.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 20, -1, -1));

        jButton5.setBackground(new java.awt.Color(51, 0, 51));
        jButton5.setFont(new java.awt.Font("Segoe Print", 1, 18)); // NOI18N
        jButton5.setForeground(new java.awt.Color(255, 255, 255));
        jButton5.setText("Back");
        jButton5.setBorder(null);
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        View_Hall.add(jButton5, new org.netbeans.lib.awtextra.AbsoluteConstraints(830, 30, 140, 40));

        jView_Availability_Button.setBackground(new java.awt.Color(51, 0, 51));
        jView_Availability_Button.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        jView_Availability_Button.setForeground(new java.awt.Color(255, 255, 255));
        jView_Availability_Button.setText("Click here to display Availbility");
        jView_Availability_Button.setBorder(null);
        jView_Availability_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jView_Availability_ButtonActionPerformed(evt);
            }
        });
        View_Hall.add(jView_Availability_Button, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 510, 300, 52));

        jView_Maintenance_Button.setBackground(new java.awt.Color(51, 0, 51));
        jView_Maintenance_Button.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        jView_Maintenance_Button.setForeground(new java.awt.Color(255, 255, 255));
        jView_Maintenance_Button.setText("Click here for maintenance schedule");
        jView_Maintenance_Button.setBorder(null);
        jView_Maintenance_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jView_Maintenance_ButtonActionPerformed(evt);
            }
        });
        View_Hall.add(jView_Maintenance_Button, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 510, 350, 52));

        jLabel28.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/pexels-photo-6985132.jpg"))); // NOI18N
        View_Hall.add(jLabel28, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1000, 600));

        Card_Layout.add(View_Hall, "card3");

        Add_Hall.setBackground(new java.awt.Color(255, 255, 255));
        Add_Hall.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel5.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Enter Hall ID");
        Add_Hall.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(126, 111, 168, -1));

        ID_Field.setBackground(new java.awt.Color(51, 0, 51));
        ID_Field.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        ID_Field.setForeground(new java.awt.Color(255, 255, 255));
        ID_Field.setText("EX: HA111111");
        ID_Field.setBorder(null);
        ID_Field.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                ID_FieldFocusGained(evt);
            }
        });
        ID_Field.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ID_FieldActionPerformed(evt);
            }
        });
        Add_Hall.add(ID_Field, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 163, 162, 34));

        jLabel6.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Enter Hall Location");
        Add_Hall.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(126, 352, 205, -1));

        LocationField.setBackground(new java.awt.Color(51, 0, 51));
        LocationField.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        LocationField.setForeground(new java.awt.Color(255, 255, 255));
        LocationField.setText("Location");
        LocationField.setBorder(null);
        LocationField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                LocationFieldFocusGained(evt);
            }
        });
        LocationField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LocationFieldActionPerformed(evt);
            }
        });
        Add_Hall.add(LocationField, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 412, 162, 34));

        jLabel7.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Enter Hall Type");
        Add_Hall.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(126, 228, 168, -1));

        TypeField.setBackground(new java.awt.Color(51, 0, 51));
        TypeField.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        TypeField.setForeground(new java.awt.Color(255, 255, 255));
        TypeField.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Auditorium", "Meeting Room", "Banquet_Hall" }));
        TypeField.setBorder(null);
        TypeField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TypeFieldActionPerformed(evt);
            }
        });
        Add_Hall.add(TypeField, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 305, 162, 35));

        Add_Clear.setBackground(new java.awt.Color(51, 0, 51));
        Add_Clear.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        Add_Clear.setForeground(new java.awt.Color(255, 255, 255));
        Add_Clear.setText("Clear");
        Add_Clear.setBorder(null);
        Add_Clear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Add_ClearActionPerformed(evt);
            }
        });
        Add_Hall.add(Add_Clear, new org.netbeans.lib.awtextra.AbsoluteConstraints(482, 532, 131, 37));

        jButton4.setBackground(new java.awt.Color(51, 0, 51));
        jButton4.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        jButton4.setForeground(new java.awt.Color(255, 255, 255));
        jButton4.setText("Add");
        jButton4.setBorder(null);
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        Add_Hall.add(jButton4, new org.netbeans.lib.awtextra.AbsoluteConstraints(686, 532, 148, 37));

        jLabel9.setFont(new java.awt.Font("Century Gothic", 1, 24)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("Adding new Hall");
        Add_Hall.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(341, 28, 268, 54));

        jButton2.setBackground(new java.awt.Color(51, 0, 51));
        jButton2.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        jButton2.setForeground(new java.awt.Color(255, 255, 255));
        jButton2.setText("Back ");
        jButton2.setBorder(null);
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        Add_Hall.add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(744, 39, 174, 50));

        jLabel29.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/pexels-photo-6985132.jpg"))); // NOI18N
        Add_Hall.add(jLabel29, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1000, 600));

        Card_Layout.add(Add_Hall, "card4");

        Search_Hall.setBackground(new java.awt.Color(255, 255, 255));
        Search_Hall.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel14.setFont(new java.awt.Font("Century Gothic", 1, 24)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(255, 255, 255));
        jLabel14.setText("Search & Filter for Hall's Info");
        Search_Hall.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 10, -1, -1));

        jButton6.setBackground(new java.awt.Color(51, 0, 51));
        jButton6.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        jButton6.setForeground(new java.awt.Color(255, 255, 255));
        jButton6.setText("Back");
        jButton6.setBorder(null);
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });
        Search_Hall.add(jButton6, new org.netbeans.lib.awtextra.AbsoluteConstraints(780, 20, 170, 50));

        Search_Field.setBackground(new java.awt.Color(51, 0, 51));
        Search_Field.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        Search_Field.setForeground(new java.awt.Color(255, 255, 255));
        Search_Field.setText("Type here to search");
        Search_Field.setBorder(null);
        Search_Field.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                Search_FieldFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                Search_FieldFocusLost(evt);
            }
        });
        Search_Field.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Search_FieldActionPerformed(evt);
            }
        });
        Search_Hall.add(Search_Field, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 190, 300, 50));

        Search_Button.setBackground(new java.awt.Color(51, 0, 51));
        Search_Button.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        Search_Button.setForeground(new java.awt.Color(255, 255, 255));
        Search_Button.setText("Search");
        Search_Button.setBorder(null);
        Search_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Search_ButtonActionPerformed(evt);
            }
        });
        Search_Hall.add(Search_Button, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 190, 110, 50));

        jScrollPane2.setBackground(new java.awt.Color(255, 255, 255));
        jScrollPane2.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane2.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);
        jScrollPane2.setViewportBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jHall_search.setBackground(new java.awt.Color(51, 0, 51));
        jHall_search.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        jHall_search.setForeground(new java.awt.Color(255, 255, 255));
        jHall_search.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"", "", "", "", ""},
                {null, null, null, null, ""},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Hall ID", "Hall Type", "Hall Location", "Hall Capacity", "Hall Cost"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jHall_search.setGridColor(new java.awt.Color(51, 0, 51));
        jHall_search.setSelectionBackground(new java.awt.Color(51, 0, 51));
        jHall_search.setSelectionForeground(new java.awt.Color(51, 0, 51));
        jHall_search.setShowGrid(false);
        jHall_search.getTableHeader().setResizingAllowed(false);
        jHall_search.getTableHeader().setReorderingAllowed(false);
        jScrollPane2.setViewportView(jHall_search);
        if (jHall_search.getColumnModel().getColumnCount() > 0) {
            jHall_search.getColumnModel().getColumn(0).setResizable(false);
            jHall_search.getColumnModel().getColumn(0).setPreferredWidth(10);
            jHall_search.getColumnModel().getColumn(1).setResizable(false);
            jHall_search.getColumnModel().getColumn(2).setResizable(false);
            jHall_search.getColumnModel().getColumn(3).setResizable(false);
            jHall_search.getColumnModel().getColumn(4).setResizable(false);
        }

        Search_Hall.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 270, 648, 120));

        jLabel30.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/pexels-photo-6985132.jpg"))); // NOI18N
        Search_Hall.add(jLabel30, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1000, 600));

        Card_Layout.add(Search_Hall, "card5");

        Update_Hall.setBackground(new java.awt.Color(255, 255, 255));
        Update_Hall.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel16.setFont(new java.awt.Font("Century Gothic", 1, 24)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(255, 255, 255));
        jLabel16.setText("Update Hall Information");
        Update_Hall.add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(312, 31, 319, 39));

        jButton9.setBackground(new java.awt.Color(51, 0, 51));
        jButton9.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        jButton9.setForeground(new java.awt.Color(255, 255, 255));
        jButton9.setText("Back");
        jButton9.setBorder(null);
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });
        Update_Hall.add(jButton9, new org.netbeans.lib.awtextra.AbsoluteConstraints(788, 33, 156, 40));

        Update_Box.setBackground(new java.awt.Color(51, 0, 51));
        Update_Box.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        Update_Box.setForeground(new java.awt.Color(255, 255, 255));
        Update_Box.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Options", "Hall_ID", "Hall_Type", "Hall_Location" }));
        Update_Box.setBorder(null);
        Update_Box.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                Update_BoxItemStateChanged(evt);
            }
        });
        Update_Hall.add(Update_Box, new org.netbeans.lib.awtextra.AbsoluteConstraints(363, 282, 229, 48));

        Update_Field.setBackground(new java.awt.Color(51, 0, 51));
        Update_Field.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        Update_Field.setForeground(new java.awt.Color(255, 255, 255));
        Update_Field.setBorder(null);
        Update_Field.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Update_FieldActionPerformed(evt);
            }
        });
        Update_Hall.add(Update_Field, new org.netbeans.lib.awtextra.AbsoluteConstraints(34, 114, 260, 47));

        Update_Table.setBackground(new java.awt.Color(51, 0, 51));
        Update_Table.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        Update_Table.setForeground(new java.awt.Color(255, 255, 255));
        Update_Table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Hall ID", "Hall Type", "Hall Location", "Hall Capacity", "Hall Cost"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        Update_Table.setSelectionBackground(new java.awt.Color(51, 0, 51));
        Update_Table.setSelectionForeground(new java.awt.Color(51, 0, 51));
        Update_Table.getTableHeader().setResizingAllowed(false);
        Update_Table.getTableHeader().setReorderingAllowed(false);
        jScrollPane3.setViewportView(Update_Table);

        Update_Hall.add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(347, 118, 491, 96));

        jLabel17.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(255, 255, 255));
        jLabel17.setText("Which Field You want to Update:");
        Update_Hall.add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 240, 310, -1));

        Update_ID.setBackground(new java.awt.Color(51, 0, 51));
        Update_ID.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        Update_ID.setForeground(new java.awt.Color(255, 255, 255));
        Update_ID.setText("New Hall ID");
        Update_ID.setBorder(null);
        Update_ID.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                Update_IDFocusGained(evt);
            }
        });
        Update_Hall.add(Update_ID, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 370, 229, 53));

        Location_Update.setBackground(new java.awt.Color(51, 0, 51));
        Location_Update.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        Location_Update.setForeground(new java.awt.Color(255, 255, 255));
        Location_Update.setText("New Hall Location");
        Location_Update.setBorder(null);
        Location_Update.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                Location_UpdateFocusGained(evt);
            }
        });
        Location_Update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Location_UpdateActionPerformed(evt);
            }
        });
        Update_Hall.add(Location_Update, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 370, 229, 53));

        Update_Button.setBackground(new java.awt.Color(51, 0, 51));
        Update_Button.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        Update_Button.setForeground(new java.awt.Color(255, 255, 255));
        Update_Button.setText("Update");
        Update_Button.setBorder(null);
        Update_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Update_ButtonActionPerformed(evt);
            }
        });
        Update_Hall.add(Update_Button, new org.netbeans.lib.awtextra.AbsoluteConstraints(503, 521, 160, 40));

        Update_Clear.setBackground(new java.awt.Color(51, 0, 51));
        Update_Clear.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        Update_Clear.setForeground(new java.awt.Color(255, 255, 255));
        Update_Clear.setText("Clear");
        Update_Clear.setBorder(null);
        Update_Clear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Update_ClearActionPerformed(evt);
            }
        });
        Update_Hall.add(Update_Clear, new org.netbeans.lib.awtextra.AbsoluteConstraints(184, 521, 150, 40));

        Update_Type.setBackground(new java.awt.Color(51, 0, 51));
        Update_Type.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        Update_Type.setForeground(new java.awt.Color(255, 255, 255));
        Update_Type.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Auditorium", "Meeting_Room", "Banquet_Hall" }));
        Update_Type.setBorder(null);
        Update_Type.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Update_TypeActionPerformed(evt);
            }
        });
        Update_Hall.add(Update_Type, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 370, 180, 50));

        Update_Search.setBackground(new java.awt.Color(51, 0, 51));
        Update_Search.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        Update_Search.setForeground(new java.awt.Color(255, 255, 255));
        Update_Search.setText("Search");
        Update_Search.setBorder(null);
        Update_Search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Update_SearchActionPerformed(evt);
            }
        });
        Update_Hall.add(Update_Search, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 180, 110, 40));

        jLabel8.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Enter Hall ID To Update");
        Update_Hall.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 80, 264, -1));

        jLabel31.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/pexels-photo-6985132.jpg"))); // NOI18N
        Update_Hall.add(jLabel31, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1000, 600));

        Card_Layout.add(Update_Hall, "card6");

        Delete_Hall.setBackground(new java.awt.Color(255, 255, 255));
        Delete_Hall.setPreferredSize(new java.awt.Dimension(1000, 600));
        Delete_Hall.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        Delete_Button.setBackground(new java.awt.Color(51, 0, 51));
        Delete_Button.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        Delete_Button.setForeground(new java.awt.Color(255, 255, 255));
        Delete_Button.setText("Delete");
        Delete_Button.setBorder(null);
        Delete_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Delete_ButtonActionPerformed(evt);
            }
        });
        Delete_Hall.add(Delete_Button, new org.netbeans.lib.awtextra.AbsoluteConstraints(519, 478, 135, 49));

        Delete_Clear.setBackground(new java.awt.Color(51, 0, 51));
        Delete_Clear.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        Delete_Clear.setForeground(new java.awt.Color(255, 255, 255));
        Delete_Clear.setText("Clear");
        Delete_Clear.setBorder(null);
        Delete_Clear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Delete_ClearActionPerformed(evt);
            }
        });
        Delete_Hall.add(Delete_Clear, new org.netbeans.lib.awtextra.AbsoluteConstraints(253, 478, 135, 49));

        Delete_Search.setBackground(new java.awt.Color(51, 0, 51));
        Delete_Search.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        Delete_Search.setForeground(new java.awt.Color(255, 255, 255));
        Delete_Search.setText("Search");
        Delete_Search.setBorder(null);
        Delete_Search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Delete_SearchActionPerformed(evt);
            }
        });
        Delete_Hall.add(Delete_Search, new org.netbeans.lib.awtextra.AbsoluteConstraints(366, 168, 120, 40));

        jLabel11.setFont(new java.awt.Font("Century Gothic", 1, 24)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setText("Enter Hall ID To Delete");
        Delete_Hall.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(18, 103, 323, -1));

        Delete_Field.setBackground(new java.awt.Color(51, 0, 51));
        Delete_Field.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        Delete_Field.setForeground(new java.awt.Color(255, 255, 255));
        Delete_Field.setBorder(null);
        Delete_Field.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Delete_FieldActionPerformed(evt);
            }
        });
        Delete_Hall.add(Delete_Field, new org.netbeans.lib.awtextra.AbsoluteConstraints(58, 164, 243, 47));

        Delete_Table.setAutoCreateRowSorter(true);
        Delete_Table.setBackground(new java.awt.Color(51, 0, 51));
        Delete_Table.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        Delete_Table.setForeground(new java.awt.Color(255, 255, 255));
        Delete_Table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Hall ID", "Hall Type", "Hall Location", "Hall Capacity", "Hall Cost"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        Delete_Table.setSelectionBackground(new java.awt.Color(51, 0, 51));
        Delete_Table.getTableHeader().setResizingAllowed(false);
        Delete_Table.getTableHeader().setReorderingAllowed(false);
        jScrollPane4.setViewportView(Delete_Table);

        Delete_Hall.add(jScrollPane4, new org.netbeans.lib.awtextra.AbsoluteConstraints(253, 268, 491, 126));

        jLabel19.setBackground(new java.awt.Color(51, 0, 51));
        jLabel19.setFont(new java.awt.Font("Century Gothic", 1, 24)); // NOI18N
        jLabel19.setForeground(new java.awt.Color(255, 255, 255));
        jLabel19.setText("Delete Hall Information");
        Delete_Hall.add(jLabel19, new org.netbeans.lib.awtextra.AbsoluteConstraints(323, 44, 319, 39));

        jButton16.setBackground(new java.awt.Color(51, 0, 51));
        jButton16.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        jButton16.setForeground(new java.awt.Color(255, 255, 255));
        jButton16.setText("Back");
        jButton16.setBorder(null);
        jButton16.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton16ActionPerformed(evt);
            }
        });
        Delete_Hall.add(jButton16, new org.netbeans.lib.awtextra.AbsoluteConstraints(807, 46, 145, 40));

        jLabel32.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/pexels-photo-6985132.jpg"))); // NOI18N
        Delete_Hall.add(jLabel32, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1000, 600));

        Card_Layout.add(Delete_Hall, "card7");

        Set_Date_Time.setBackground(new java.awt.Color(255, 255, 255));
        Set_Date_Time.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel20.setFont(new java.awt.Font("Century Gothic", 1, 24)); // NOI18N
        jLabel20.setForeground(new java.awt.Color(255, 255, 255));
        jLabel20.setText("Set Availability Date and Time");
        Set_Date_Time.add(jLabel20, new org.netbeans.lib.awtextra.AbsoluteConstraints(301, 54, 414, 39));

        jButton18.setBackground(new java.awt.Color(51, 0, 51));
        jButton18.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        jButton18.setForeground(new java.awt.Color(255, 255, 255));
        jButton18.setText("Back");
        jButton18.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton18ActionPerformed(evt);
            }
        });
        Set_Date_Time.add(jButton18, new org.netbeans.lib.awtextra.AbsoluteConstraints(790, 40, 145, 40));

        jLabel3.setFont(new java.awt.Font("Century Gothic", 1, 24)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Set Start date  ");
        Set_Date_Time.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(35, 113, 321, -1));

        jLabel4.setFont(new java.awt.Font("Century Gothic", 1, 24)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Set end date ");
        Set_Date_Time.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(35, 275, 420, -1));

        Availbility_Clear.setBackground(new java.awt.Color(51, 0, 51));
        Availbility_Clear.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        Availbility_Clear.setForeground(new java.awt.Color(255, 255, 255));
        Availbility_Clear.setText("Clear");
        Availbility_Clear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Availbility_ClearActionPerformed(evt);
            }
        });
        Set_Date_Time.add(Availbility_Clear, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 460, 145, 40));

        Availability_Button.setBackground(new java.awt.Color(51, 0, 51));
        Availability_Button.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        Availability_Button.setForeground(new java.awt.Color(255, 255, 255));
        Availability_Button.setText("Set");
        Availability_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Availability_ButtonActionPerformed(evt);
            }
        });
        Set_Date_Time.add(Availability_Button, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 460, 145, 40));

        End_Availability.setBackground(new java.awt.Color(51, 0, 51));
        End_Availability.setForeground(new java.awt.Color(255, 255, 255));
        End_Availability.setAutoscrolls(true);
        End_Availability.setFocusCycleRoot(true);
        End_Availability.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        End_Availability.setIcon(null);
        End_Availability.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                End_AvailabilityPropertyChange(evt);
            }
        });
        Set_Date_Time.add(End_Availability, new org.netbeans.lib.awtextra.AbsoluteConstraints(306, 324, 179, -1));

        Start_Availability.setBackground(new java.awt.Color(51, 0, 51));
        Start_Availability.setForeground(new java.awt.Color(255, 255, 255));
        Start_Availability.setAutoscrolls(true);
        Start_Availability.setFocusCycleRoot(true);
        Start_Availability.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        Start_Availability.setIcon(null);
        Start_Availability.setMaxSelectableDate(new java.util.Date(2208963687000L));
        Start_Availability.setMinSelectableDate(new java.util.Date(1717174887000L));
        Start_Availability.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                Start_AvailabilityPropertyChange(evt);
            }
        });
        Set_Date_Time.add(Start_Availability, new org.netbeans.lib.awtextra.AbsoluteConstraints(306, 162, 179, -1));

        jLabel33.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/pexels-photo-6985132.jpg"))); // NOI18N
        Set_Date_Time.add(jLabel33, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1000, 600));

        Card_Layout.add(Set_Date_Time, "card8");

        Set_Maintenance.setBackground(new java.awt.Color(255, 255, 255));
        Set_Maintenance.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel21.setBackground(new java.awt.Color(255, 255, 255));
        jLabel21.setFont(new java.awt.Font("Century Gothic", 1, 24)); // NOI18N
        jLabel21.setForeground(new java.awt.Color(255, 255, 255));
        jLabel21.setText("Set Maintenance Date and Time");
        Set_Maintenance.add(jLabel21, new org.netbeans.lib.awtextra.AbsoluteConstraints(265, 14, 414, 39));

        jButton19.setBackground(new java.awt.Color(51, 0, 51));
        jButton19.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        jButton19.setForeground(new java.awt.Color(255, 255, 255));
        jButton19.setText("Back");
        jButton19.setBorder(null);
        jButton19.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton19ActionPerformed(evt);
            }
        });
        Set_Maintenance.add(jButton19, new org.netbeans.lib.awtextra.AbsoluteConstraints(750, 47, 145, 40));

        jLabel15.setFont(new java.awt.Font("Century Gothic", 1, 24)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(255, 255, 255));
        jLabel15.setText("Set end date ");
        Set_Maintenance.add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(16, 347, -1, -1));

        Availbility_Clear1.setBackground(new java.awt.Color(51, 0, 51));
        Availbility_Clear1.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        Availbility_Clear1.setForeground(new java.awt.Color(255, 255, 255));
        Availbility_Clear1.setText("Clear");
        Availbility_Clear1.setBorder(null);
        Availbility_Clear1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Availbility_Clear1ActionPerformed(evt);
            }
        });
        Set_Maintenance.add(Availbility_Clear1, new org.netbeans.lib.awtextra.AbsoluteConstraints(254, 544, 160, 40));

        Maintenance_Button.setBackground(new java.awt.Color(51, 0, 51));
        Maintenance_Button.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        Maintenance_Button.setForeground(new java.awt.Color(255, 255, 255));
        Maintenance_Button.setText("Set");
        Maintenance_Button.setBorder(null);
        Maintenance_Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Maintenance_ButtonActionPerformed(evt);
            }
        });
        Set_Maintenance.add(Maintenance_Button, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 544, 150, 40));

        Start_Maintenance_Date.setBackground(new java.awt.Color(51, 0, 51));
        Start_Maintenance_Date.setAutoscrolls(true);
        Start_Maintenance_Date.setFocusCycleRoot(true);
        Start_Maintenance_Date.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        Start_Maintenance_Date.setIcon(null);
        Start_Maintenance_Date.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                Start_Maintenance_DatePropertyChange(evt);
            }
        });
        Set_Maintenance.add(Start_Maintenance_Date, new org.netbeans.lib.awtextra.AbsoluteConstraints(48, 271, 282, -1));

        End_Maintenance_Date.setBackground(new java.awt.Color(51, 0, 51));
        End_Maintenance_Date.setAutoscrolls(true);
        End_Maintenance_Date.setFocusCycleRoot(true);
        End_Maintenance_Date.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        End_Maintenance_Date.setIcon(null);
        End_Maintenance_Date.setMaxSelectableDate(new java.util.Date(2208963687000L));
        End_Maintenance_Date.setMinSelectableDate(new java.util.Date(1717174887000L));
        End_Maintenance_Date.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                End_Maintenance_DatePropertyChange(evt);
            }
        });
        Set_Maintenance.add(End_Maintenance_Date, new org.netbeans.lib.awtextra.AbsoluteConstraints(47, 408, 283, -1));

        jLabel18.setFont(new java.awt.Font("Century Gothic", 1, 24)); // NOI18N
        jLabel18.setForeground(new java.awt.Color(255, 255, 255));
        jLabel18.setText("Set End Time");
        Set_Maintenance.add(jLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(366, 360, 200, -1));

        jLabel22.setBackground(new java.awt.Color(51, 0, 51));
        jLabel22.setFont(new java.awt.Font("Century Gothic", 1, 24)); // NOI18N
        jLabel22.setForeground(new java.awt.Color(255, 255, 255));
        jLabel22.setText("Remarks");
        Set_Maintenance.add(jLabel22, new org.netbeans.lib.awtextra.AbsoluteConstraints(722, 461, 224, -1));

        End_Maintenance_Time.setBackground(new java.awt.Color(51, 0, 51));
        End_Maintenance_Time.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        End_Maintenance_Time.setForeground(new java.awt.Color(255, 255, 255));
        End_Maintenance_Time.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "12:00 AM", "01:00 AM", "02:00 AM", "03:00 AM", "04:00 AM", "05:00 AM", "06:00 AM", "07:00 AM", "08:00 AM", "09:00 AM", "10:00 AM", "11:00 AM", "12:00 PM", "01:00 PM", "02:00 PM", "03:00 PM", "04:00 PM", "05:00 PM", "06:00 PM", "07:00 PM", "08:00 PM", "09:00 PM", "10:00 PM", "11:00 PM" }));
        End_Maintenance_Time.setBorder(null);
        Set_Maintenance.add(End_Maintenance_Time, new org.netbeans.lib.awtextra.AbsoluteConstraints(671, 389, 193, 45));

        Start_Maintenance_Time.setBackground(new java.awt.Color(51, 0, 51));
        Start_Maintenance_Time.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        Start_Maintenance_Time.setForeground(new java.awt.Color(255, 255, 255));
        Start_Maintenance_Time.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "12:00 AM", "01:00 AM", "02:00 AM", "03:00 AM", "04:00 AM", "05:00 AM", "06:00 AM", "07:00 AM", "08:00 AM", "09:00 AM", "10:00 AM", "11:00 AM", "12:00 PM", "01:00 PM", "02:00 PM", "03:00 PM", "04:00 PM", "05:00 PM", "06:00 PM", "07:00 PM", "08:00 PM", "09:00 PM", "10:00 PM", "11:00 PM" }));
        Start_Maintenance_Time.setBorder(null);
        Start_Maintenance_Time.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Start_Maintenance_TimeActionPerformed(evt);
            }
        });
        Set_Maintenance.add(Start_Maintenance_Time, new org.netbeans.lib.awtextra.AbsoluteConstraints(671, 301, 193, 48));

        jLabel13.setFont(new java.awt.Font("Century Gothic", 1, 24)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(255, 255, 255));
        jLabel13.setText("Set Start date ");
        Set_Maintenance.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(16, 222, -1, -1));

        Maintenance_Search.setBackground(new java.awt.Color(51, 0, 51));
        Maintenance_Search.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        Maintenance_Search.setForeground(new java.awt.Color(255, 255, 255));
        Maintenance_Search.setText("Search");
        Maintenance_Search.setBorder(null);
        Maintenance_Search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Maintenance_SearchActionPerformed(evt);
            }
        });
        Set_Maintenance.add(Maintenance_Search, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 163, 110, 40));

        Maintenance_Field.setBackground(new java.awt.Color(51, 0, 51));
        Maintenance_Field.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        Maintenance_Field.setForeground(new java.awt.Color(255, 255, 255));
        Maintenance_Field.setText("Enter Hall ID");
        Maintenance_Field.setBorder(null);
        Maintenance_Field.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                Maintenance_FieldFocusGained(evt);
            }
        });
        Maintenance_Field.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Maintenance_FieldActionPerformed(evt);
            }
        });
        Set_Maintenance.add(Maintenance_Field, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 108, 243, 47));

        Maintenance_Table.setBackground(new java.awt.Color(51, 0, 51));
        Maintenance_Table.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        Maintenance_Table.setForeground(new java.awt.Color(255, 255, 255));
        Maintenance_Table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Hall ID", "Hall Type", "Start Date", "End Date", "From", "To"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        Maintenance_Table.setGridColor(new java.awt.Color(51, 0, 51));
        Maintenance_Table.setSelectionBackground(new java.awt.Color(51, 0, 51));
        Maintenance_Table.getTableHeader().setResizingAllowed(false);
        Maintenance_Table.getTableHeader().setReorderingAllowed(false);
        jScrollPane6.setViewportView(Maintenance_Table);

        Set_Maintenance.add(jScrollPane6, new org.netbeans.lib.awtextra.AbsoluteConstraints(324, 108, 670, 96));

        jLabel24.setFont(new java.awt.Font("Century Gothic", 1, 24)); // NOI18N
        jLabel24.setForeground(new java.awt.Color(255, 255, 255));
        jLabel24.setText("Set Start Time");
        Set_Maintenance.add(jLabel24, new org.netbeans.lib.awtextra.AbsoluteConstraints(368, 265, 321, -1));

        Remarks_Maintenance.setBackground(new java.awt.Color(51, 0, 51));
        Remarks_Maintenance.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        Remarks_Maintenance.setForeground(new java.awt.Color(255, 255, 255));
        Remarks_Maintenance.setBorder(null);
        Remarks_Maintenance.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Remarks_MaintenanceActionPerformed(evt);
            }
        });
        Set_Maintenance.add(Remarks_Maintenance, new org.netbeans.lib.awtextra.AbsoluteConstraints(722, 522, 243, 47));

        jLabel34.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/pexels-photo-6985132.jpg"))); // NOI18N
        Set_Maintenance.add(jLabel34, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1000, 600));

        Card_Layout.add(Set_Maintenance, "card9");

        View_Availability.setBackground(new java.awt.Color(255, 255, 255));
        View_Availability.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel12.setFont(new java.awt.Font("Century Gothic", 1, 24)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 255, 255));
        jLabel12.setText("View Current Halls Availability");
        View_Availability.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(265, 18, -1, 67));

        jButton3.setBackground(new java.awt.Color(51, 0, 51));
        jButton3.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        jButton3.setForeground(new java.awt.Color(255, 255, 255));
        jButton3.setText("Back");
        jButton3.setBorder(null);
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        View_Availability.add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(776, 26, 143, 40));

        jScrollPane5.setBackground(new java.awt.Color(255, 255, 255));
        jScrollPane5.setBorder(null);
        jScrollPane5.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane5.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);

        jHall_Availability.setBackground(new java.awt.Color(51, 0, 51));
        jHall_Availability.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        jHall_Availability.setForeground(new java.awt.Color(255, 255, 255));
        jHall_Availability.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"", "", "", "", "", null},
                {null, null, null, "", null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Hall ID", "Hall Type", "Start Date", "End Date", "From", "To"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jHall_Availability.setGridColor(new java.awt.Color(51, 0, 51));
        jHall_Availability.setSelectionBackground(new java.awt.Color(51, 0, 51));
        jHall_Availability.getTableHeader().setResizingAllowed(false);
        jHall_Availability.getTableHeader().setReorderingAllowed(false);
        jScrollPane5.setViewportView(jHall_Availability);
        if (jHall_Availability.getColumnModel().getColumnCount() > 0) {
            jHall_Availability.getColumnModel().getColumn(0).setResizable(false);
            jHall_Availability.getColumnModel().getColumn(0).setPreferredWidth(10);
            jHall_Availability.getColumnModel().getColumn(1).setResizable(false);
            jHall_Availability.getColumnModel().getColumn(2).setResizable(false);
            jHall_Availability.getColumnModel().getColumn(3).setResizable(false);
            jHall_Availability.getColumnModel().getColumn(4).setResizable(false);
        }

        View_Availability.add(jScrollPane5, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 138, 970, 436));

        jLabel35.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/pexels-photo-6985132.jpg"))); // NOI18N
        View_Availability.add(jLabel35, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1000, 600));

        Card_Layout.add(View_Availability, "card10");

        View_Maintenance.setBackground(new java.awt.Color(255, 255, 255));
        View_Maintenance.setForeground(new java.awt.Color(255, 255, 255));
        View_Maintenance.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel25.setFont(new java.awt.Font("Century Gothic", 1, 24)); // NOI18N
        jLabel25.setForeground(new java.awt.Color(255, 255, 255));
        jLabel25.setText("View under maintenance Halls");
        View_Maintenance.add(jLabel25, new org.netbeans.lib.awtextra.AbsoluteConstraints(281, 12, 394, -1));

        jButton7.setBackground(new java.awt.Color(51, 0, 51));
        jButton7.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        jButton7.setForeground(new java.awt.Color(255, 255, 255));
        jButton7.setText("Back");
        jButton7.setBorder(null);
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });
        View_Maintenance.add(jButton7, new org.netbeans.lib.awtextra.AbsoluteConstraints(838, 19, 135, 40));

        jScrollPane7.setBackground(new java.awt.Color(255, 255, 255));
        jScrollPane7.setBorder(null);
        jScrollPane7.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane7.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);

        Hall_Maintenance.setBackground(new java.awt.Color(51, 0, 51));
        Hall_Maintenance.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        Hall_Maintenance.setForeground(new java.awt.Color(255, 255, 255));
        Hall_Maintenance.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"", "", "", ""},
                {null, null, "", null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Hall ID", "Start Date", "End Date", "Remarks"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        Hall_Maintenance.setGridColor(new java.awt.Color(51, 0, 51));
        Hall_Maintenance.setSelectionBackground(new java.awt.Color(51, 0, 51));
        Hall_Maintenance.getTableHeader().setResizingAllowed(false);
        Hall_Maintenance.getTableHeader().setReorderingAllowed(false);
        jScrollPane7.setViewportView(Hall_Maintenance);
        if (Hall_Maintenance.getColumnModel().getColumnCount() > 0) {
            Hall_Maintenance.getColumnModel().getColumn(0).setResizable(false);
            Hall_Maintenance.getColumnModel().getColumn(0).setPreferredWidth(10);
            Hall_Maintenance.getColumnModel().getColumn(1).setResizable(false);
            Hall_Maintenance.getColumnModel().getColumn(2).setResizable(false);
            Hall_Maintenance.getColumnModel().getColumn(3).setResizable(false);
        }

        View_Maintenance.add(jScrollPane7, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 138, 976, 436));

        jLabel36.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/pexels-photo-6985132.jpg"))); // NOI18N
        View_Maintenance.add(jLabel36, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1000, 600));

        Card_Layout.add(View_Maintenance, "card10");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 3, Short.MAX_VALUE)
                .addComponent(Card_Layout, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(0, 3, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(Card_Layout, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ID_FieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ID_FieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ID_FieldActionPerformed

    private void LocationFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LocationFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_LocationFieldActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        Add_Hall.setVisible(false);
        Main_Menu.setVisible(true);
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        Hall_Management hall= new Hall_Management(null,null,null,0,0);
        String hallID=ID_Field.getText();
        String hallType=(String) TypeField.getSelectedItem();
        String hallLocation=LocationField.getText();
        if (hallLocation.isEmpty() || hallLocation.equals("Location")|| hallID.isEmpty() || hallID.equals("EX: HA111111")) {
               JOptionPane.showMessageDialog(null, "Hall info cannot be empty.", "Validation Error", JOptionPane.ERROR_MESSAGE);
               return;
           }
        hall.set_Hall_info(hallID, hallType, hallLocation);
        
    }//GEN-LAST:event_jButton4ActionPerformed

    private void Add_ClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Add_ClearActionPerformed
        ID_Field.setText("EX: HA111111");
        TypeField.setSelectedIndex(0);
        LocationField.setText("Location");
        // TODO add your handling code here:
    }//GEN-LAST:event_Add_ClearActionPerformed

    private void ID_FieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_ID_FieldFocusGained
        if(ID_Field.getText().equals("EX: HA111111")){
            ID_Field.setText("");
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_ID_FieldFocusGained

    private void LocationFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_LocationFieldFocusGained
        if(LocationField.getText().equals("Location")){
            LocationField.setText("");
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_LocationFieldFocusGained

    private void jView_Availability_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jView_Availability_ButtonActionPerformed
        View_Hall.setVisible(false);
        View_Availability.setVisible(true);
        DefaultTableModel model=(DefaultTableModel) jHall_Availability.getModel();
        model.setRowCount(0);
        Hall_Management hall=new Hall_Management(null,null,null,0,0);
        hall.view_file("src\\database\\Hall_Availability.txt", model);
        // TODO add your handling code here:
    }//GEN-LAST:event_jView_Availability_ButtonActionPerformed

    private void Search_FieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_Search_FieldFocusGained
        if(Search_Field.getText().equals("Type here to search")){
            Search_Field.setText("");
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_Search_FieldFocusGained

    private void Search_FieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_Search_FieldFocusLost
        if(Search_Field.getText().isEmpty()){
            Search_Field.setText("Type here to search");
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_Search_FieldFocusLost

    private void Search_FieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Search_FieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Search_FieldActionPerformed

    private void Search_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Search_ButtonActionPerformed
        Hall_Management h= new Hall_Management(null,null,null,0,0);
        String search=Search_Field.getText();
        DefaultTableModel model=(DefaultTableModel) jHall_search.getModel();
        model.setRowCount(0);
        h.Hall_search_filter("src\\database\\Hall_Info.txt", model, search);
        // TODO add your handling code here:
    }//GEN-LAST:event_Search_ButtonActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        Search_Hall.setVisible(false);
        Main_Menu.setVisible(true);
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton6ActionPerformed

    private void Update_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Update_ButtonActionPerformed
        Hall_Management hall=new Hall_Management(null,null,null,0,0);
        String entered_ID=Update_Field.getText();
        String Selcted_Type=(String) Update_Box.getSelectedItem();
        String id=Update_ID.getText();
        String type=(String) Update_Type.getSelectedItem();
        String Location= Location_Update.getText();
        
        if (entered_ID.isEmpty() || entered_ID.equals("Enter Hall ID")) {
        JOptionPane.showMessageDialog(null, "Please enter a valid Hall ID.", "Validation Error", JOptionPane.ERROR_MESSAGE);
        return;
    }
        hall.update_Hall_info(entered_ID, Selcted_Type, id, type, Location);
        // TODO add your handling code here:
    }//GEN-LAST:event_Update_ButtonActionPerformed

    private void Update_FieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Update_FieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Update_FieldActionPerformed

    private void Location_UpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Location_UpdateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Location_UpdateActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        Update_Hall.setVisible(false);
        Main_Menu.setVisible(true);
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton9ActionPerformed

    private void Update_BoxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_Update_BoxItemStateChanged
        
        if (evt.getStateChange() == java.awt.event.ItemEvent.SELECTED) {
            String item=(String) Update_Box.getSelectedItem();
            Update_ID.setVisible("Hall_ID".equals(item));
            Update_Type.setVisible("Hall_Type".equals(item));
            Location_Update.setVisible("Hall_Location".equals(item));
            Update_Box.getParent().revalidate();
            Update_Box.getParent().repaint();
        }
            // TODO add your handling code here:
    }//GEN-LAST:event_Update_BoxItemStateChanged

    private void View_Hall_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_View_Hall_ButtonActionPerformed
        Main_Menu.setVisible(false);
        View_Hall.setVisible(true);
        DefaultTableModel model=(DefaultTableModel) jHall_Info.getModel();
        model.setRowCount(0);
        Hall_Management hall=new Hall_Management(null,null,null,0,0);
        hall.view_file("src\\database\\Hall_Info.txt", model);
        // TODO add your handling code here:
    }//GEN-LAST:event_View_Hall_ButtonActionPerformed

    private void Search_Filter_Hall_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Search_Filter_Hall_ButtonActionPerformed
        Main_Menu.setVisible(false);
        Search_Hall.setVisible(true);
        // TODO add your handling code here:
    }//GEN-LAST:event_Search_Filter_Hall_ButtonActionPerformed

    private void Update_Hall_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Update_Hall_ButtonActionPerformed
        Main_Menu.setVisible(false);
        Update_Hall.setVisible(true);
        
        Update_ID.setVisible(false);
        Update_Type.setVisible(false);
        Location_Update.setVisible(false);
        // TODO add your handling code here:
    }//GEN-LAST:event_Update_Hall_ButtonActionPerformed

    private void Delete_Hall_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Delete_Hall_ButtonActionPerformed
        Main_Menu.setVisible(false);
        Delete_Hall.setVisible(true);
        // TODO add your handling code here:
    }//GEN-LAST:event_Delete_Hall_ButtonActionPerformed

    private void Set_data_time_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Set_data_time_ButtonActionPerformed
        Main_Menu.setVisible(false);
        Set_Date_Time.setVisible(true);
        // TODO add your handling code here:
    }//GEN-LAST:event_Set_data_time_ButtonActionPerformed

    private void Maintenance_date_timeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Maintenance_date_timeActionPerformed
        Main_Menu.setVisible(false);
        Set_Maintenance.setVisible(true);
            // TODO add your handling code here:
    }//GEN-LAST:event_Maintenance_date_timeActionPerformed

    private void Add_Hall_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Add_Hall_ButtonActionPerformed
        Main_Menu.setVisible(false);
        Add_Hall.setVisible(true);
        // TODO add your handling code here:
    }//GEN-LAST:event_Add_Hall_ButtonActionPerformed

    private void Update_ClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Update_ClearActionPerformed
        Update_Field.setText("");
        Update_ID.setText("New Hall ID");
        Update_ID.setVisible(false);
        
        Update_Type.setVisible(false);
        
        Location_Update.setText("New Hall Location");
        Location_Update.setVisible(false);
        Update_Box.setSelectedIndex(0);
        // TODO add your handling code here:
    }//GEN-LAST:event_Update_ClearActionPerformed

    private void TypeFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TypeFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TypeFieldActionPerformed

    private void Update_TypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Update_TypeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Update_TypeActionPerformed

    private void Update_SearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Update_SearchActionPerformed
        Hall_Management h= new Hall_Management(null,null,null,0,0);
        String check=Update_Field.getText();
        DefaultTableModel model=(DefaultTableModel) Update_Table.getModel();
        model.setRowCount(0);
        h.Select_Specific_Hall("src\\database\\Hall_Info.txt", model, check);
        // TODO add your handling code here:
    }//GEN-LAST:event_Update_SearchActionPerformed

    private void Location_UpdateFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_Location_UpdateFocusGained
        if(Location_Update.getText().equals("New Hall Location")){
           Location_Update.setText("");
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_Location_UpdateFocusGained

    private void Update_IDFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_Update_IDFocusGained
        if(Update_ID.getText().equals("New Hall ID")){
           Update_ID.setText("");
        }
            // TODO add your handling code here:
    }//GEN-LAST:event_Update_IDFocusGained

    private void Delete_SearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Delete_SearchActionPerformed
        Hall_Management h= new Hall_Management(null,null,null,0,0);
        String delete =Delete_Field.getText();
        DefaultTableModel model=(DefaultTableModel) Delete_Table.getModel();
        model.setRowCount(0);
        h.Select_Specific_Hall("src\\database\\Hall_Info.txt", model, delete);
        // TODO add your handling code here:
    }//GEN-LAST:event_Delete_SearchActionPerformed

    private void Delete_FieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Delete_FieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Delete_FieldActionPerformed

    private void jButton16ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton16ActionPerformed
        Delete_Hall.setVisible(false);
        Main_Menu.setVisible(true);
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton16ActionPerformed

    private void Delete_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Delete_ButtonActionPerformed
        Hall_Management hall=new Hall_Management(null,null,null,0,0);
        String delete_ID=Delete_Field.getText();
        
        if (delete_ID.isEmpty() || delete_ID.equals("Enter Hall ID")) {
        JOptionPane.showMessageDialog(null, "Please enter a valid Hall ID.", "Validation Error", JOptionPane.ERROR_MESSAGE);
        return;
    }
        hall.delete_Hall_info(delete_ID);
        // TODO add your handling code here:
    }//GEN-LAST:event_Delete_ButtonActionPerformed

    private void Delete_ClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Delete_ClearActionPerformed
        Delete_Field.setText("");
        // TODO add your handling code here:
    }//GEN-LAST:event_Delete_ClearActionPerformed

    private void Availbility_ClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Availbility_ClearActionPerformed
        Start_Availability.setDate(null);
        End_Availability.setDate(null);
        // TODO add your handling code here:
    }//GEN-LAST:event_Availbility_ClearActionPerformed

    private void jButton18ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton18ActionPerformed
        Set_Date_Time.setVisible(false);
        Main_Menu.setVisible(true);
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton18ActionPerformed

    private void Availability_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Availability_ButtonActionPerformed
        availibility_schedule AVAl=new availibility_schedule(null,null,null,0,0,null,null,null,null,null,null);
        LocalDate Start_Date=getDateFromDateChooser(Start_Availability);
        LocalDate End_Date=getDateFromDateChooser(End_Availability);
        
        LocalDateTime startDateTime = Start_Date.atTime(LocalTime.now()); // or use .atStartOfDay() or any fixed time
        LocalDateTime endDateTime = End_Date.atTime(LocalTime.now());
        
        AVAl.specify_date_time(new LocalDateTime []{startDateTime, endDateTime});
        // TODO add your handling code here:
    }//GEN-LAST:event_Availability_ButtonActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        View_Availability.setVisible(false);
        View_Hall.setVisible(true);
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        View_Hall.setVisible(false);
        Main_Menu.setVisible(true);
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton5ActionPerformed

    private void Start_AvailabilityPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_Start_AvailabilityPropertyChange
        if ("date".equals(evt.getPropertyName())) {
            Date startDate = Start_Availability.getDate();
            if (startDate != null) {
                // Set the minimum selectable date for the end date chooser
                End_Availability.setMinSelectableDate(startDate);
                Start_Maintenance_Date.setMinSelectableDate(startDate);
                JOptionPane.showMessageDialog(null,"Start Time by default is set to 8:00 AM");
            }
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_Start_AvailabilityPropertyChange

    private void jButton19ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton19ActionPerformed
        Set_Maintenance.setVisible(false);
        Main_Menu.setVisible(true);
            // TODO add your handling code here:
    }//GEN-LAST:event_jButton19ActionPerformed

    private void Availbility_Clear1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Availbility_Clear1ActionPerformed
        Start_Maintenance_Date.setDate(null);
        End_Maintenance_Date.setDate(null);
        Maintenance_Field.setText("");
        Remarks_Maintenance.setText("");
            // TODO add your handling code here:
    }//GEN-LAST:event_Availbility_Clear1ActionPerformed

    private void Maintenance_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Maintenance_ButtonActionPerformed
        String hall_id=  Maintenance_Field.getText();
        String remarks= Remarks_Maintenance.getText();

        if(hall_id.isEmpty()||remarks.isEmpty()){
            JOptionPane.showMessageDialog(null,"Fields cannot be empty","Validation Error", JOptionPane.ERROR_MESSAGE);
        }
        else{
                LocalDate St_Date=getDateFromDateChooser(Start_Maintenance_Date);
                LocalDate En_Date=getDateFromDateChooser(End_Maintenance_Date);
                
                
                String St_Time=Start_Maintenance_Time.getSelectedItem().toString();
                String En_Time=End_Maintenance_Time.getSelectedItem().toString();
                
                DateTimeFormatter timeFormatter = DateTimeFormatter.ofPattern("hh:mm a");
                
                try {
                    LocalTime startTime = LocalTime.parse(St_Time, timeFormatter);
                    LocalTime endTime = LocalTime.parse(En_Time, timeFormatter);

                    LocalDateTime startDateTime = LocalDateTime.of(St_Date, startTime);
                    LocalDateTime endDateTime = LocalDateTime.of(En_Date, endTime);

                    Hall_Maintenance Schedule = new Hall_Maintenance(null, null, null, 0, 0, null, null, null, null, null, null);
                    Schedule.Schedule_Maintenance(hall_id, remarks, startDateTime, endDateTime);

                } catch (Exception e) {
        // General catch for any unexpected errors
                    JOptionPane.showMessageDialog(null, "An unexpected error occurred: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
                }
                
        }
                    // TODO add your handling code here:
    }//GEN-LAST:event_Maintenance_ButtonActionPerformed

    private void End_Maintenance_DatePropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_End_Maintenance_DatePropertyChange
        // TODO add your handling code here:
    }//GEN-LAST:event_End_Maintenance_DatePropertyChange

    private void Start_Maintenance_TimeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Start_Maintenance_TimeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Start_Maintenance_TimeActionPerformed

    private void End_AvailabilityPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_End_AvailabilityPropertyChange
        if ("date".equals(evt.getPropertyName())) {
            Date endDate = End_Availability.getDate();
            if (endDate != null) {
                // Set the minimum selectable date for the end date chooser
                Start_Maintenance_Date.setMaxSelectableDate(endDate);
                End_Maintenance_Date.setMaxSelectableDate(endDate);
                JOptionPane.showMessageDialog(null,"End time by default set to 6:00 PM");
            }
        }
            // TODO add your handling code here:
    }//GEN-LAST:event_End_AvailabilityPropertyChange

    private void Start_Maintenance_DatePropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_Start_Maintenance_DatePropertyChange
        if ("date".equals(evt.getPropertyName())) {
            Date start_M_Date = Start_Maintenance_Date.getDate();
            if (start_M_Date != null) {
                // Set the minimum selectable date for the end date chooser
                End_Maintenance_Date.setMinSelectableDate(start_M_Date);
            }
        }
            // TODO add your handling code here:
    }//GEN-LAST:event_Start_Maintenance_DatePropertyChange

    private void Maintenance_SearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Maintenance_SearchActionPerformed
        Hall_Management h= new Hall_Management(null,null,null,0,0);
        String check=Maintenance_Field.getText();
        DefaultTableModel model=(DefaultTableModel) Maintenance_Table.getModel();
        model.setRowCount(0);
        h.Select_Specific_Hall("src\\database\\Hall_Availability.txt", model, check);

        // TODO add your handling code here:
    }//GEN-LAST:event_Maintenance_SearchActionPerformed

    private void Maintenance_FieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Maintenance_FieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Maintenance_FieldActionPerformed

    private void Remarks_MaintenanceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Remarks_MaintenanceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Remarks_MaintenanceActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        View_Maintenance.setVisible(false);
        View_Hall.setVisible(true);
            // TODO add your handling code here:
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jView_Maintenance_ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jView_Maintenance_ButtonActionPerformed
        View_Hall.setVisible(false);
        View_Maintenance.setVisible(true);
        DefaultTableModel model=(DefaultTableModel) Hall_Maintenance.getModel();
        model.setRowCount(0);
        Hall_Management hall=new Hall_Management(null,null,null,0,0);
        hall.view_file("src\\database\\Hall_Maintenance.txt", model);

            // TODO add your handling code here:
    }//GEN-LAST:event_jView_Maintenance_ButtonActionPerformed

    private void Maintenance_FieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_Maintenance_FieldFocusGained
        if(Maintenance_Field.getText().equals("Enter Hall ID")){
            Maintenance_Field.setText("");
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_Maintenance_FieldFocusGained

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        new Hall_Menu_GUI().setVisible(false);
        this.dispose();
        new Main().setVisible(true);
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void EXITButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EXITButtonActionPerformed
        System.exit(0);
    }//GEN-LAST:event_EXITButtonActionPerformed

    private LocalDate getDateFromDateChooser(JDateChooser dateChooser) {
        Date date = dateChooser.getDate(); // Get the selected date
        if (date != null) {
            return date.toInstant().atZone(ZoneId.systemDefault()).toLocalDate();
        } else {
            JOptionPane.showMessageDialog(this, "Please select a date.", "Validation Error", JOptionPane.ERROR_MESSAGE);
            return null; // Handle null if no date is selected
        }
        
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Hall_Menu_GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Hall_Menu_GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Hall_Menu_GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Hall_Menu_GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                Hall_Menu_GUI GUI=new Hall_Menu_GUI();
                
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Add_Clear;
    private javax.swing.JPanel Add_Hall;
    private javax.swing.JButton Add_Hall_Button;
    protected javax.swing.JButton Availability_Button;
    protected javax.swing.JButton Availbility_Clear;
    protected javax.swing.JButton Availbility_Clear1;
    protected javax.swing.JPanel Card_Layout;
    protected javax.swing.JButton Delete_Button;
    protected javax.swing.JButton Delete_Clear;
    protected javax.swing.JTextField Delete_Field;
    private javax.swing.JPanel Delete_Hall;
    private javax.swing.JButton Delete_Hall_Button;
    protected javax.swing.JButton Delete_Search;
    protected javax.swing.JTable Delete_Table;
    private javax.swing.JButton EXITButton;
    private com.toedter.calendar.JDateChooser End_Availability;
    private com.toedter.calendar.JDateChooser End_Maintenance_Date;
    private javax.swing.JComboBox<String> End_Maintenance_Time;
    private javax.swing.JTable Hall_Maintenance;
    private javax.swing.JTextField ID_Field;
    private javax.swing.JTextField LocationField;
    protected javax.swing.JTextField Location_Update;
    public javax.swing.JPanel Main_Menu;
    protected javax.swing.JButton Maintenance_Button;
    protected javax.swing.JTextField Maintenance_Field;
    protected javax.swing.JButton Maintenance_Search;
    protected javax.swing.JTable Maintenance_Table;
    private javax.swing.JButton Maintenance_date_time;
    protected javax.swing.JTextField Remarks_Maintenance;
    private javax.swing.JButton Search_Button;
    private javax.swing.JTextField Search_Field;
    private javax.swing.JButton Search_Filter_Hall_Button;
    private javax.swing.JPanel Search_Hall;
    private javax.swing.JPanel Set_Date_Time;
    private javax.swing.JPanel Set_Maintenance;
    private javax.swing.JButton Set_data_time_Button;
    private com.toedter.calendar.JDateChooser Start_Availability;
    private com.toedter.calendar.JDateChooser Start_Maintenance_Date;
    private javax.swing.JComboBox<String> Start_Maintenance_Time;
    private javax.swing.JComboBox<String> TypeField;
    protected javax.swing.JComboBox<String> Update_Box;
    protected javax.swing.JButton Update_Button;
    protected javax.swing.JButton Update_Clear;
    protected javax.swing.JTextField Update_Field;
    protected javax.swing.JPanel Update_Hall;
    private javax.swing.JButton Update_Hall_Button;
    protected javax.swing.JTextField Update_ID;
    protected javax.swing.JButton Update_Search;
    protected javax.swing.JTable Update_Table;
    protected javax.swing.JComboBox<String> Update_Type;
    private javax.swing.JPanel View_Availability;
    private javax.swing.JPanel View_Hall;
    private javax.swing.JButton View_Hall_Button;
    private javax.swing.JPanel View_Maintenance;
    private javax.swing.JButton jButton1;
    protected javax.swing.JButton jButton16;
    protected javax.swing.JButton jButton18;
    protected javax.swing.JButton jButton19;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    protected javax.swing.JButton jButton9;
    private javax.swing.JTable jHall_Availability;
    private javax.swing.JTable jHall_Info;
    private javax.swing.JTable jHall_search;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    protected javax.swing.JLabel jLabel16;
    protected javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    protected javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    protected javax.swing.JLabel jLabel20;
    protected javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    protected javax.swing.JScrollPane jScrollPane3;
    protected javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    protected javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JButton jView_Availability_Button;
    private javax.swing.JButton jView_Maintenance_Button;
    // End of variables declaration//GEN-END:variables
}
